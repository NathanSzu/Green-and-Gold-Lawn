{"version":3,"sources":["Assets/Grass.jpg","Assets/Snow.jpg","Assets/Spring.jpg","Assets/Fall.jpg","Components/Background.js","Components/Jumbotron.js","App.js","reportWebVitals.js","index.js"],"names":["Background","src","alt","className","Jumbotron","class","href","role","App","useState","season","setSeason","seasonText","setSeasonText","useEffect","gsap","set","xPercent","currentDate","Date","includes","winter","spring","summer","fall","updateSpring","pointerEvents","updateSummer","updateFall","updateWinter","toggleSeason","e","console","log","target","value","timeline","to","duration","ease","onComplete","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ade15ffd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Grass.69beed34.jpg\";","export default __webpack_public_path__ + \"static/media/Snow.d75f823f.jpg\";","export default __webpack_public_path__ + \"static/media/Spring.090d59d2.jpg\";","export default __webpack_public_path__ + \"static/media/Fall.b044f674.jpg\";","import React from 'react'\r\n\r\nexport default function Background({ src, alt }) {\r\n    return (\r\n            <img className='season-background' src={src} alt={alt}></img>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Jumbotron() {\r\n    return (\r\n        <div class=\"jumbotron pt-5\">\r\n            <h1 class=\"display-4 text-center header-font\">\r\n                <span>\r\n                    <span className='green'>Green</span> & <span className='gold'>Gold</span>\r\n                </span>\r\n            </h1>\r\n            <h1 class=\"display-4 text-center mb-4 header-font\">\r\n                <span className='brown'>Landscaping</span>\r\n            </h1>\r\n            <h2></h2>\r\n            <p class=\"description\">With more than 20 years of lawncare and snow removal experience, Green & Gold Landscaping is ready to tackle any project on your list no matter what season. Call today and get a competetive quote for your home or business.</p>\r\n\r\n            <hr class=\"my-4\"></hr>\r\n\r\n            <div className='text-center'>\r\n                <a class=\"btn btn-dark btn-lg\" href='tel:123-456-7890' role=\"button\">Call Now</a>\r\n            </div>\r\n\r\n            <div className='j-background'></div>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\nimport summer from './Assets/Grass.jpg';\nimport winter from './Assets/Snow.jpg';\nimport spring from './Assets/Spring.jpg';\nimport fall from './Assets/Fall.jpg';\nimport Background from './Components/Background';\nimport Jumbotron from './Components/Jumbotron';\nimport gsap from \"gsap\";\n\nfunction App() {\n  const [season, setSeason] = useState('')\n  const [seasonText, setSeasonText] = useState('')\n\n  useEffect(() => {\n    gsap.set('.season', { xPercent: 100 })\n\n    var currentDate = `${new Date()}`;\n\n    if (currentDate.includes('Dec') || currentDate.includes('Jan') || currentDate.includes('Feb')) {\n      setSeason(winter); setSeasonText('winter')\n    } else if (currentDate.includes('Mar') || currentDate.includes('Apr') || currentDate.includes('May')) {\n      setSeason(spring); setSeasonText('spring')\n    } else if (currentDate.includes('Jun') || currentDate.includes('Jul') || currentDate.includes('Aug')) {\n      setSeason(summer); setSeasonText('summer')\n    } else if (currentDate.includes('Sep') || currentDate.includes('Oct') || currentDate.includes('Nov')) {\n      setSeason(fall); setSeasonText('fall')\n    }\n  }, [])\n\n  const updateSpring = () => { setSeason(spring); setSeasonText('spring'); gsap.set('.navtab', { pointerEvents: 'auto' }) }\n\n  const updateSummer = () => { setSeason(summer); setSeasonText('summer'); gsap.set('.navtab', { pointerEvents: 'auto' }) }\n\n  const updateFall = () => { setSeason(fall); setSeasonText('fall'); gsap.set('.navtab', { pointerEvents: 'auto' }) }\n\n  const updateWinter = () => { setSeason(winter); setSeasonText('winter'); gsap.set('.navtab', { pointerEvents: 'auto' }) }\n\n  // Function to toggle season backgrounds and other elements\n  const toggleSeason = (e) => {\n    console.log('clicked')\n    if (seasonText === e.target.value) {\n\n    } else {\n      gsap.set('.season', { xPercent: 100 })\n      gsap.timeline()\n        .set('.navtab', { pointerEvents: 'none' })\n\n      if (e.target.value === 'spring') {\n        gsap.to('.spring', { duration: .6, xPercent: 0, ease: \"power4.out\", onComplete: updateSpring })\n      } else if (e.target.value === 'summer') {\n        gsap.to('.summer', { duration: .6, xPercent: 0, ease: \"power4.out\", onComplete: updateSummer })\n      } else if (e.target.value === 'fall') {\n        gsap.to('.fall', { duration: .6, xPercent: 0, ease: \"power4.out\", onComplete: updateFall })\n      } else if (e.target.value === 'winter') {\n        gsap.to('.winter', { duration: .6, xPercent: 0, ease: \"power4.out\", onComplete: updateWinter })\n      }\n    }\n  }\n\n  return (\n    <div>\n      <div className='vertical-center w-100'>\n        <nav className='col-md-10 col-lg-8 mr-auto ml-auto smallscreen-edit'>\n          <button className='navtab col-3' value='spring' onClick={toggleSeason}>Spring</button>\n          <button className='navtab col-3' value='summer' onClick={toggleSeason}>Summer</button>\n          <button className='navtab col-3' value='fall' onClick={toggleSeason}>Fall</button>\n          <button className='navtab col-3' value='winter' onClick={toggleSeason}>Winter</button>\n        </nav>\n        <div className='col-md-10 col-lg-8 mr-auto ml-auto smallscreen-edit'>\n          <Jumbotron />\n        </div>\n      </div>\n\n      {/* Actual background */}\n      <div className='background'>\n        <Background src={season} alt='Background' />\n      </div>\n\n      {/* Animated season switching backgrounds */}\n      <div className='season spring'>\n        <Background src={spring} alt='Spring' />\n      </div>\n      <div className='season summer'>\n        <Background src={summer} alt='Summer' />\n      </div>\n      <div className='season fall'>\n        <Background src={fall} alt='Fall' />\n      </div>\n      <div className='season winter'>\n        <Background src={winter} alt='Winter' />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}